package {{ package }};

import dagger.Component;
import javax.inject.Inject;
import com.flarestar.drones.base.Drone;
import com.flarestar.drones.base.DroneCollection;
import android.app.Activity;

@Component(modules = { {{ activityModuleClass }}.class })
abstract class {{ moduleClassName }} implements DroneCollection {

    {% for drone in drones %}
    public abstract {{ drone.getClassName() }} make{{ drone.getSimpleClassName() }}();
    {% endfor %}

    public Drone[] getDrones() {
        return new Drone[] {
            {% for drone in drones %}
            make{{ drone.getSimpleClassName() }}(),
            {% endfor %}
        };
    }

    public static DroneCollection build(Activity activity) {
        return Dagger{{ moduleClassName }}.builder().{{ activityModuleClassLc }}(new {{ activityModuleClass }}(activity)).build();
    }
}
